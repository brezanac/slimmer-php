##### GENERAL CONFIGURATION #####
# Docker compose project name.
# It will be used as prefix for generated images, running containers, volumes and network names.
COMPOSE_PROJECT_NAME=slimmer-php

# Path of the document root on the host side.
# Please adjust apache and php-fpm service configurations accordingly, if required.
# This includes the apache/vhost.conf too.
DOCUMENT_ROOT_HOST_PATH=../

# Path of the document root inside the containers.
# Please adjust apache and php-fpm service configurations accordingly, if required.
DOCUMENT_ROOT_CONTAINER_PATH=/var/www

# The base image for apache and php-fpm (brezanac/apt-image) comes only with UTC time zone preinstalled.
# Choose whether the complete tzdata will be installed instead (available options: true for yes, any other value for no).
INSTALL_COMPLETE_TZDATA=true


##### APACHE SERVICE CONFIGURATION #####
# List of system-wide packages which will be installed inside the apache container.
APACHE_SYSTEM_PACKAGES=

# List of apache2 modules which will be enabled inside the apache container (a2enmod).
APACHE_MODULES_ENABLED=mpm_event proxy_fcgi proxy_http rewrite headers

# List of apache2 modules which will be disabled inside the apache container (a2dismod).
APACHE_MODULES_DISABLED=mpm_prefork mpm_worker

##### PHP-FPM SERVICE CONFIGURATION #####
# PHP version to install (available options: 5.6, 7.0, 7.1, 7.2, 7.3, 7.4).
PHP_FPM_VERSION=7.4

# List of system-wide packages which will be available inside the php-fpm container.
# Check https://launchpad.net/~ondrej/+archive/ubuntu/php for a complete list of available packages.
# Please make sure to specify the correct version of the PHP packages which are compatible with the chosen PHP_FPM_VERSION value.
PHP_FPM_SYSTEM_PACKAGES=php7.4-curl php7.4-intl php7.4-json php7.4-mbstring php7.4-mysql php7.4-opcache php7.4-xml git openssh-client php-xdebug php-pear

# List of PEAR packages which will be available inside the php-fpm container.
# Check https://pear.php.net/packages.php for a complete list of available packages.
PHP_FPM_PEAR_PACKAGES=

# List of PECL packages which will be available inside the php-fpm container.
# Check https://pecl.php.net/packages.php for a complete list of packages.
PHP_FPM_PECL_PACKAGES=

# Install Composer inside the php-fpm container (available options: 0 for no, 1 for yes).
PHP_FPM_COMPOSER_INSTALL=1

##### MYSQL SERVICE CONFIGURATION #####
# MySQL version to install (available options: 5.6, 5.7, 8.0).
# Check https://hub.docker.com/_/mysql for a complete list of available versions (tags).
MYSQL_VERSION=5.7

# Password for the MySQL root user.
MYSQL_ROOT_PASSWORD=slimmer-php-root-password

# The MySQL database that will be created automatically during the MySQL image build process.
MYSQL_DATABASE=slimmer-php

# The MySQL user that will be created automatically during the MySQL image build process.
MYSQL_USER=slimmer-php

# The MySQL password assigned to the created MySQL user (MYSQL_USER).
MYSQL_PASSWORD=slimmer-php-password

# Published (exposed) port of the MySQL service.
# You can use this port to access the MySQL service externally through MySQL clients.
MYSQL_PUBLISHED_PORT=5050

# Path on the host for the MySQL datadir volume.
# This is the place where all the MySQL data will be stored and made persistent.
# More info at https://hub.docker.com/_/mysql#where-to-store-data.
MYSQL_DATA_DIR=./mysql/data


##### TRAEFIK SERVICE CONFIGURATION #####
# Name of the Traefik Docker container.
TRAEFIK_CONTAINER_NAME=traefik_reverse_proxy

# Port on which Traefik will be listening to for HTTP/TCP requests.
TRAEFIK_HTTP_PORT=80

# Port for accessing Traefik Web UI.
TRAEFIK_WEB_UI_PORT=8080

# Traefik hostname (usually localhost).
TRAEFIK_HOSTNAME=localhost

# Name of the public Docker network that Traefik will use for communication.
TRAEFIK_NETWORK_NAME=docker-services-traefik_public

# Traefik log level (available options: DEBUG, PANIC, FATAL, ERROR, WARN, INFO).
# https://docs.traefik.io/observability/logs/
TRAEFIK_LOG_LEVEL=ERROR

# Container restart policy (available options: no, always, on-failure, unless-stopped).
# https://docs.docker.com/compose/compose-file/#restart
TRAEFIK_RESTART_POLICY=unless-stopped
